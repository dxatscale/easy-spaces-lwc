# Unique name for this workflow
name: sfpowerscripts build and deploy

# Definition when the workflow should run
on:
    workflow_dispatch:
    push:
        branches:
            - develop

# Jobs to be executed
jobs:
    quickbuild:
        name: QuickBuild the packages
        runs-on: ubuntu-latest
        container: dxatscale/sfpowerscripts
        steps:
            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: |
                  echo "${SALESFORCE_JWT_SECRET_KEY}" > ./JWT_KEYFILE
                  sfdx auth:jwt:grant -u ${{ secrets.DEVHUB_USERNAME }} -i ${{ secrets.DEVHUB_CLIENT_ID }} -f ./JWT_KEYFILE -a devhub -r https://login.salesforce.com
                  rm -f ./JWT_KEYFILE
              env:
                  SALESFORCE_JWT_SECRET_KEY: ${{ secrets.DEVHUB_SERVER_KEY }}

            # Create all packages
            - name: 'Create packages'
              id: sfpowerscripts-build
              run: |
                  pwd
                  sfdx sfpowerscripts:orchestrator:quickbuild -v devhub

            # Publish artifacts
            - uses: actions/upload-artifact@v2
              with:
                  name: quickbuild-artifacts
                  path: artifacts

    # Simulating a deploy to System Test Environment using a scratch org
    deploy:
        name: Deploy and Validate the packages
        runs-on: ubuntu-latest
        container: dxatscale/sfpowerscripts
        needs: quickbuild
        steps:
            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

              # Download Artifacts
            - name: Download Artifacts
              uses: actions/download-artifact@v2
              with:
                  name: quickbuild-artifacts
                  path: artifacts

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: |
                  echo "${SALESFORCE_JWT_SECRET_KEY}" > ./JWT_KEYFILE
                  sfdx auth:jwt:grant -u ${{ secrets.DEVHUB_USERNAME }} -i ${{ secrets.DEVHUB_CLIENT_ID }} -f ./JWT_KEYFILE -a devhub -r https://login.salesforce.com
              env:
                  SALESFORCE_JWT_SECRET_KEY: ${{ secrets.DEVHUB_SERVER_KEY }}

            # Create scratch org
            - name: Create scratch org
              run: sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1 -v devhub

            # Install all new packages into scratch org
            - name: 'Install new package versions into scratch org'
              run: 'sfdx sfpowerscripts:orchestrator:deploy -u scratch-org'

            # Housekeeping
            - name: Delete scratch org
              if: always()
              run: sfdx force:org:delete -p -u scratch-org

    build:
        name: Build Production Ready packages
        runs-on: ubuntu-latest
        container: dxatscale/sfpowerscripts
        needs: deploy
        steps:
            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

              # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: |
                  echo "${SALESFORCE_JWT_SECRET_KEY}" > ./JWT_KEYFILE
                  sfdx auth:jwt:grant -u ${{ secrets.DEVHUB_USERNAME }} -i ${{ secrets.DEVHUB_CLIENT_ID }} -f ./JWT_KEYFILE -a devhub -r https://login.salesforce.com
                  rm -f ./JWT_KEYFILE
              env:
                  SALESFORCE_JWT_SECRET_KEY: ${{ secrets.DEVHUB_SERVER_KEY }}

              # Create all packages
            - name: 'Create packages'
              id: sfpowerscripts-build
              run: 'sfdx sfpowerscripts:orchestrator:build -v devhub'

              # Publish artifacts
            - uses: actions/upload-artifact@v2
              with:
                  name: validated-artifacts
                  path: artifacts

    promote:
        runs-on: ubuntu-latest
        container: dxatscale/sfpowerscripts
        needs: build
        name: Promote the packages
        steps:
            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

              # Download Artifacts

            - name: Download Artifacts
              uses: actions/download-artifact@v2
              with:
                  name: validated-artifacts
                  path: artifacts

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: |
                  echo "${SALESFORCE_JWT_SECRET_KEY}" > ./JWT_KEYFILE
                  sfdx auth:jwt:grant -u ${{ secrets.DEVHUB_USERNAME }} -i ${{ secrets.DEVHUB_CLIENT_ID }} -f ./JWT_KEYFILE -a devhub -r https://login.salesforce.com
                  rm -f ./JWT_KEYFILE
              env:
                  SALESFORCE_JWT_SECRET_KEY: ${{ secrets.DEVHUB_SERVER_KEY }}

            # Promoted all packages
            - name: 'Promote packages'
              id: sfpowerscripts-build
              run: 'sfdx sfpowerscripts:orchestrator:promote -v devhub'
